#include <string>

#include "ops.h"

namespace smt {

const std::unordered_map<std::string, PrimOp> str2primop(
    { { "and", And },
      { "or", Or },
      { "xor", Xor },
      { "not", Not },
      { "=>", Implies },
      { "ite", Ite },
      { "=", Equal },
      { "distinct", Distinct },
      { "apply", Apply },
      { "+", Plus },
      { "-", Minus },
      // Need to pick which one based on context
      // { "-", Negate },
      { "*", Mult },
      { "/", Div },
      { "div", IntDiv },
      { "to_real", To_Real },
      { "to_int", To_Int },
      { "is_int", Is_Int },
      { "<", Lt },
      { "<=", Le },
      { ">", Gt },
      { ">=", Ge },
      { "mod", Mod },
      { "abs", Abs },
      { "pow", Pow },
      { "concat", Concat },
      { "extract", Extract },
      { "bvnot", BVNot },
      { "bvneg", BVNeg },
      { "bvand", BVAnd },
      { "bvor", BVOr },
      { "bvxor", BVXor },
      { "bvnand", BVNand },
      { "bvnor", BVNor },
      { "bvxnor", BVXnor },
      { "bvcomp", BVComp },
      { "bvadd", BVAdd },
      { "bvsub", BVSub },
      { "bvmul", BVMul },
      { "bvudiv", BVUdiv },
      { "bvsdiv", BVSdiv },
      { "bvurem", BVUrem },
      { "bvsrem", BVSrem },
      { "bvsmod", BVSmod },
      { "bvshl", BVShl },
      { "bvashr", BVAshr },
      { "bvlshr", BVLshr },
      { "bvult", BVUlt },
      { "bvule", BVUle },
      { "bvugt", BVUgt },
      { "bvuge", BVUge },
      { "bvslt", BVSlt },
      { "bvsle", BVSle },
      { "bvsgt", BVSgt },
      { "bvsge", BVSge },
      { "zero_extend", Zero_Extend },
      { "sign_extend", Sign_Extend },
      { "repeat", Repeat },
      { "rotate_left", Rotate_Left },
      { "rotate_right", Rotate_Right },
      { "bv2nat", BV_To_Nat },
      { "int2bv", Int_To_BV },
      { "select", Select },
      { "store", Store },
      { "forall", Forall },
      { "exists", Exists },
      { "apply_selector", Apply_Selector },
      { "apply_tester", Apply_Tester },
      { "apply_constructor", Apply_Constructor } });

}  // namespace smt
